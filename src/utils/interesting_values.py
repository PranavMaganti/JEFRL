import math
import sys

interesting_integers = [
    -9223372036854775808,
    -9223372036854775807,
    -9007199254740992,
    -9007199254740991,
    -9007199254740990,
    -4294967297,
    -4294967296,
    -4294967295,
    -2147483649,
    -2147483648,
    -2147483647,
    -1073741824,
    -536870912,
    -268435456,
    -65537,
    -65536,
    -65535,
    -4096,
    -1024,
    -256,
    -128,
    -2,
    -1,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    16,
    64,
    127,
    128,
    129,
    255,
    256,
    257,
    512,
    1000,
    1024,
    4096,
    10000,
    65535,
    65536,
    65537,
    268435439,
    268435440,
    268435441,
    536870887,
    536870888,
    536870889,
    268435456,
    536870912,
    1073741824,
    1073741823,
    1073741824,
    1073741825,
    2147483647,
    2147483648,
    2147483649,
    4294967295,
    4294967296,
    4294967297,
    9007199254740990,
    9007199254740991,
    9007199254740992,
    9223372036854775807,
]

interesting_floats = [
    math.inf,
    sys.float_info.max,
    -1e-15,
    -1e12,
    -1e9,
    -1e6,
    -1e3,
    -5.0,
    -4.0,
    -3.0,
    -2.0,
    -1.0,
    -sys.float_info.min,
    -0.0,
    0.0,
    sys.float_info.min,
    1.0,
    2.0,
    3.0,
    4.0,
    5.0,
    1e3,
    1e6,
    1e9,
    1e12,
    1e-15,
]

interesting_regex = [
    ".",
    "\\P{Any}",
    "^",
    "(?=.)",
    "\\b",
    "()",
    "(?<a>)",
    "((((.).).).)",
    "(?<a>(?<b>(?<c>(?<d>.).).).)",
    # Copied from
    # https://cs.chromium.org/chromium/src/testing/libfuzzer/fuzzers/dicts/regexp.dict
    "?",
    "abc",
    "()",
    "[]",
    "abc|def",
    "abc|def|ghi",
    "^xxx$",
    "ab\\b\\d\\bcd",
    "\\w|\\d",
    "a*?",
    "abc+",
    "abc+?",
    "xyz?",
    "xyz??",
    "xyz{0,1}",
    "xyz{0,1}?",
    "xyz{93}",
    "xyz{1,32}",
    "xyz{1,32}?",
    "xyz{1,}",
    "xyz{1,}?",
    "a\\fb\\nc\\rd\\te\\vf",
    "a\\nb\\bc",
    "(?:foo)",
    "(?: foo )",
    "foo|(bar|baz)|quux",
    "foo(?=bar)baz",
    "foo(?!bar)baz",
    "foo(?<=bar)baz",
    "foo(?<!bar)baz",
    "()",
    "(?=)",
    "[]",
    "[x]",
    "[xyz]",
    "[a-zA-Z0-9]",
    "[-123]",
    "[^123]",
    "]",
    "}",
    "[a-b-c]",
    "[x\\dz]",
    "[\\d-z]",
    "[\\d-\\d]",
    "[z-\\d]",
    "\\cj\\cJ\\ci\\cI\\ck\\cK",
    "\\c!",
    "\\c_",
    "\\c~",
    "[\\c!]",
    "[\\c_]",
    "[\\c~]",
    "[\\ca]",
    "[\\cz]",
    "[\\cA]",
    "[\\cZ]",
    "[\\c1]",
    "\\[\\]\\{\\}\\(\\)\\%\\^\\#\\ ",
    "[\\[\\]\\{\\}\\(\\)\\%\\^\\#\\ ]",
    "\\8",
    "\\9",
    "\\11",
    "\\11a",
    "\\011",
    "\\118",
    "\\111",
    "\\1111",
    "(x)(x)(x)\\1",
    "(x)(x)(x)\\2",
    "(x)(x)(x)\\3",
    "(x)(x)(x)\\4",
    "(x)(x)(x)\\1*",
    "(x)(x)(x)\\3*",
    "(x)(x)(x)\\4*",
    "(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\\10",
    "(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\\11",
    "(a)\\1",
    "(a\\1)",
    "(\\1a)",
    "(\\2)(\\1)",
    "(?=a){0,10}a",
    "(?=a){1,10}a",
    "(?=a){9,10}a",
    "(?!a)?a",
    "\\1(a)",
    "(?!(a))\\1",
    "(?!\\1(a\\1)\\1)\\1",
    "\\1\\2(a(?:\\1(b\\1\\2))\\2)\\1",
    "[\\0]",
    "[\\11]",
    "[\\11a]",
    "[\\011]",
    "[\\00011]",
    "[\\118]",
    "[\\111]",
    "[\\1111]",
    "\\x60",
    "\\x3z",
    "\\c",
    "\\u0034",
    "\\u003z",
    "foo[z]*",
    "\\u{12345}",
    "\\u{12345}\\u{23456}",
    "\\u{12345}{3}",
    "\\u{12345}*",
    "\\ud808\\udf45*",
    "[\\ud808\\udf45-\\ud809\\udccc]",
    "a",
    "a|b",
    "a\\n",
    "a$",
    "a\\b!",
    "a\\Bb",
    "a*?",
    "a?",
    "a??",
    "a{0,1}?",
    "a{1,2}?",
    "a+?",
    "(a)",
    "(a)\\1",
    "(\\1a)",
    "\\1(a)",
    "a\\s",
    "a\\S",
    "a\\D",
    "a\\w",
    "a\\W",
    "a.",
    "a\\q",
    "a[a]",
    "a[^a]",
    "a[a-z]",
    "a(?:b)",
    "a(?=b)",
    "a(?!b)",
    "\\x60",
    "\\u0060",
    "\\cA",
    "\\q",
    "\\1112",
    "(a)\\1",
    "(?!a)?a\\1",
    "(?:(?=a))a\\1",
    "a{}",
    "a{,}",
    "a{",
    "a{z}",
    "a{12z}",
    "a{12,",
    "a{12,3b",
    "{}",
    "{,}",
    "{",
    "{z}",
    "{1z}",
    "{12,",
    "{12,3b",
    "a",
    "abc",
    "a[bc]d",
    "a|bc",
    "ab|c",
    "a||bc",
    "(?:ab)",
    "(?:ab|cde)",
    "(?:ab)|cde",
    "(ab)",
    "(ab|cde)",
    "(ab)\\1",
    "(ab|cde)\\1",
    "(?:ab)?",
    "(?:ab)+",
    "a?",
    "a+",
    "a??",
    "a*?",
    "a+?",
    "(?:a?)?",
    "(?:a+)?",
    "(?:a?)+",
    "(?:a*)+",
    "(?:a+)+",
    "(?:a?)*",
    "(?:a*)*",
    "(?:a+)*",
    "a{0}",
    "(?:a+){0,0}",
    "a*b",
    "a+b",
    "a*b|c",
    "a+b|c",
    "(?:a{5,1000000}){3,1000000}",
    "(?:ab){4,7}",
    "a\\bc",
    "a\\sc",
    "a\\Sc",
    "a(?=b)c",
    "a(?=bbb|bb)c",
    "a(?!bbb|bb)c",
    "\\xe2\\x81\\xa3",
    "[\\xe2\\x81\\xa3]",
    "\\xed\\xb0\\x80",
    "\\xed\\xa0\\x80",
    "(\\xed\\xb0\\x80)\\x01",
    "((\\xed\\xa0\\x80))\\x02",
    "\\xf0\\x9f\\x92\\xa9",
    "\\x01",
    "\\x0f",
    "[-\\xf0\\x9f\\x92\\xa9]+",
    "[\\xf0\\x9f\\x92\\xa9-\\xf4\\x8f\\xbf\\xbf]",
    "(?<=)",
    "(?<=a)",
    "(?<!)",
    "(?<!a)",
    "(?<a>)",
    "(?<a>.)",
    "(?<a>.)\\k<a>",
    "\\p{Script=Greek}",
    "\\P{sc=Greek}",
    "\\p{Script_Extensions=Greek}",
    "\\P{scx=Greek}",
    "\\p{General_Category=Decimal_Number}",
    "\\P{gc=Decimal_Number}",
    "\\p{gc=Nd}",
    "\\P{Decimal_Number}",
    "\\p{Nd}",
    "\\P{Any}",
    "\\p{Changes_When_NFKC_Casefolded}",
    "[\\p{Script_Extensions=Greek}--[α-γ]]",
    "[\\p{Script_Extensions=Mongolian}&&\\p{Number}]",
    "[\\q{abc|def|0|5}--\\d]",
]


custom_property_names = ["a", "b", "c", "d", "e", "f", "g", "h"]
custom_method_names = ["m", "n", "o", "p", "valueOf", "toString"]

builtin_classes = [
    "Object",
    "Array",
    "Function",
    "String",
    "Boolean",
    "Number",
    "Symbol",
    "BigInt",
    "RegExp",
    "Date",
    "DateView",
    "Promise",
    "Proxy",
    "Map",
    "WeakMap",
    "Set",
    "WeakSet",
    "WeakRef",
    "FinalizationRegistry",
    "Math",
    "JSON",
    "Reflect",
]

interesting_values = ["undefined", "NaN", "Infinity"]

builtin_functions = [
    "eval",
    "parseInt",
    "parseFloat",
    "isNaN",
    "isFinite",
]


builtin_array_constructors = [
    "ArrayBuffer",
    "SharedArrayBuffer",
    "Uint8Array",
    "Int8Array",
    "Uint16Array",
    "Int16Array",
    "Uint32Array",
    "Int32Array",
    "Float32Array",
    "Float64Array",
    "Uint8ClampedArray",
    "BigUint64Array",
    "BigInt64Array",
]


builtin_properties = [
    "__proto__",
    "constructor",
    "valueOf",
    "toString",
]
