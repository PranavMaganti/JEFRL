"""
This type stub file was generated by pyright.
"""

from .objects import Object

class Node(Object):
    def __dir__(self): ...
    def __iter__(self): ...
    def keys(self): ...
    def items(self): ...

class ArrayExpression(Node):
    def __init__(self, elements) -> None: ...

class ArrayPattern(Node):
    def __init__(self, elements) -> None: ...

class ArrowFunctionExpression(Node):
    def __init__(self, params, body, expression) -> None: ...

class AssignmentExpression(Node):
    def __init__(self, operator, left, right) -> None: ...

class AssignmentPattern(Node):
    def __init__(self, left, right) -> None: ...

class AsyncArrowFunctionExpression(Node):
    def __init__(self, params, body, expression) -> None: ...

class AsyncFunctionDeclaration(Node):
    def __init__(self, id, params, body) -> None: ...

class AsyncFunctionExpression(Node):
    def __init__(self, id, params, body) -> None: ...

class AwaitExpression(Node):
    def __init__(self, argument) -> None: ...

class BinaryExpression(Node):
    def __init__(self, operator, left, right) -> None: ...

class BlockStatement(Node):
    def __init__(self, body) -> None: ...

class BreakStatement(Node):
    def __init__(self, label) -> None: ...

class CallExpression(Node):
    def __init__(self, callee, args) -> None: ...

class CatchClause(Node):
    def __init__(self, param, body) -> None: ...

class ClassBody(Node):
    def __init__(self, body) -> None: ...

class ClassDeclaration(Node):
    def __init__(self, id, superClass, body) -> None: ...

class ClassExpression(Node):
    def __init__(self, id, superClass, body) -> None: ...

class ComputedMemberExpression(Node):
    def __init__(self, object, property) -> None: ...

class ConditionalExpression(Node):
    def __init__(self, test, consequent, alternate) -> None: ...

class ContinueStatement(Node):
    def __init__(self, label) -> None: ...

class DebuggerStatement(Node):
    def __init__(self) -> None: ...

class Directive(Node):
    def __init__(self, expression, directive) -> None: ...

class DoWhileStatement(Node):
    def __init__(self, body, test) -> None: ...

class EmptyStatement(Node):
    def __init__(self) -> None: ...

class ExportAllDeclaration(Node):
    def __init__(self, source) -> None: ...

class ExportDefaultDeclaration(Node):
    def __init__(self, declaration) -> None: ...

class ExportNamedDeclaration(Node):
    def __init__(self, declaration, specifiers, source) -> None: ...

class ExportSpecifier(Node):
    def __init__(self, local, exported) -> None: ...

class ExportDefaultSpecifier(Node):
    def __init__(self, local) -> None: ...

class ExpressionStatement(Node):
    def __init__(self, expression) -> None: ...

class ForInStatement(Node):
    def __init__(self, left, right, body) -> None: ...

class ForOfStatement(Node):
    def __init__(self, left, right, body) -> None: ...

class ForStatement(Node):
    def __init__(self, init, test, update, body) -> None: ...

class FunctionDeclaration(Node):
    def __init__(self, id, params, body, generator) -> None: ...

class FunctionExpression(Node):
    def __init__(self, id, params, body, generator) -> None: ...

class Identifier(Node):
    def __init__(self, name) -> None: ...

class IfStatement(Node):
    def __init__(self, test, consequent, alternate) -> None: ...

class Import(Node):
    def __init__(self) -> None: ...

class ImportDeclaration(Node):
    def __init__(self, specifiers, source) -> None: ...

class ImportDefaultSpecifier(Node):
    def __init__(self, local) -> None: ...

class ImportNamespaceSpecifier(Node):
    def __init__(self, local) -> None: ...

class ImportSpecifier(Node):
    def __init__(self, local, imported) -> None: ...

class LabeledStatement(Node):
    def __init__(self, label, body) -> None: ...

class Literal(Node):
    def __init__(self, value, raw) -> None: ...

class MetaProperty(Node):
    def __init__(self, meta, property) -> None: ...

class MethodDefinition(Node):
    def __init__(self, key, computed, value, kind, isStatic) -> None: ...

class FieldDefinition(Node):
    def __init__(self, key, computed, value, kind, isStatic) -> None: ...

class Module(Node):
    def __init__(self, body) -> None: ...

class NewExpression(Node):
    def __init__(self, callee, args) -> None: ...

class ObjectExpression(Node):
    def __init__(self, properties) -> None: ...

class ObjectPattern(Node):
    def __init__(self, properties) -> None: ...

class Property(Node):
    def __init__(self, kind, key, computed, value, method, shorthand) -> None: ...

class RegexLiteral(Node):
    def __init__(self, value, raw, pattern, flags) -> None: ...

class RestElement(Node):
    def __init__(self, argument) -> None: ...

class ReturnStatement(Node):
    def __init__(self, argument) -> None: ...

class Script(Node):
    def __init__(self, body) -> None: ...

class SequenceExpression(Node):
    def __init__(self, expressions) -> None: ...

class SpreadElement(Node):
    def __init__(self, argument) -> None: ...

class StaticMemberExpression(Node):
    def __init__(self, object, property) -> None: ...

class Super(Node):
    def __init__(self) -> None: ...

class SwitchCase(Node):
    def __init__(self, test, consequent) -> None: ...

class SwitchStatement(Node):
    def __init__(self, discriminant, cases) -> None: ...

class TaggedTemplateExpression(Node):
    def __init__(self, tag, quasi) -> None: ...

class TemplateElement(Node):
    class Value(Object):
        def __init__(self, raw, cooked) -> None: ...

    def __init__(self, raw, cooked, tail) -> None: ...

class TemplateLiteral(Node):
    def __init__(self, quasis, expressions) -> None: ...

class ThisExpression(Node):
    def __init__(self) -> None: ...

class ThrowStatement(Node):
    def __init__(self, argument) -> None: ...

class TryStatement(Node):
    def __init__(self, block, handler, finalizer) -> None: ...

class UnaryExpression(Node):
    def __init__(self, operator, argument) -> None: ...

class UpdateExpression(Node):
    def __init__(self, operator, argument, prefix) -> None: ...

class VariableDeclaration(Node):
    def __init__(self, declarations, kind) -> None: ...

class VariableDeclarator(Node):
    def __init__(self, id, init) -> None: ...

class WhileStatement(Node):
    def __init__(self, test, body) -> None: ...

class WithStatement(Node):
    def __init__(self, object, body) -> None: ...

class YieldExpression(Node):
    def __init__(self, argument, delegate) -> None: ...

class ArrowParameterPlaceHolder(Node):
    def __init__(self, params) -> None: ...

class AsyncArrowParameterPlaceHolder(Node):
    def __init__(self, params) -> None: ...

class BlockComment(Node):
    def __init__(self, value) -> None: ...

class LineComment(Node):
    def __init__(self, value) -> None: ...
